//
//  UserDetailPresenterTests.swift
//  Placeholder
//
//  Created by Eduardo Iglesias Fern√°ndez on 13/06/2020.
//  Copyright (c) 2020 Rindus. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Placeholder
import XCTest

class UserDetailPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: UserDetailPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupUserDetailPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupUserDetailPresenter()
  {
    sut = UserDetailPresenter()
  }
  
  // MARK: Test doubles
  
  class UserDetailDisplayLogicSpy: UserDetailDisplayLogic
  {
    var displayNavBarDataCalled = false
    var displayViewFieldsCalled = false
    var displayUserInfoCalled = false
    
    func displayNavBarData(_ viewModel: UserDetail.UpdateNavBar.ViewModel) {
      displayNavBarDataCalled = true
    }
    func displayViewFields(_ viewModel: UserDetail.SetViewFields.ViewModel) {
      displayViewFieldsCalled = true
    }
    func displayUserInfo(_ viewModel: UserDetail.SetUserInfo.ViewModel) {
      displayUserInfoCalled = true
    }
    
  }
  
  // MARK: Tests
  
    func testPresentNavBarData() {
        // Given
        let spy = UserDetailDisplayLogicSpy()
        sut.viewController = spy
        let response = UserDetail.UpdateNavBar.Response(navData: Seeds.NavBarDatas.navBarDataVoid)
        
        // When
        sut.presentNavBarData(response)
        
        // Then
        XCTAssertTrue(spy.displayNavBarDataCalled, "presentNavBarData(response:) should ask the view controller to display the result")
    }
    
    func testPresentViewFields() {
        // Given
        let spy = UserDetailDisplayLogicSpy()
        sut.viewController = spy
        let response = UserDetail.SetViewFields.Response(viewFields: Seeds.UserFierldsStructs.UserFieldTest)
        
        // When
        sut.presentViewFields(response)
        
        // Then
        XCTAssertTrue(spy.displayViewFieldsCalled, "presentNavBarData(response:) should ask the view controller to display the result")

    }
    
    func testPresentUserInfo() {
         // Given
         let spy = UserDetailDisplayLogicSpy()
         sut.viewController = spy
        
        let response = UserDetail.SetUserInfo.Response(userInfo: Seeds.Users.userTest)
         
         // When
         sut.presentUserInfo(response)
         
         // Then
         XCTAssertTrue(spy.displayUserInfoCalled, "presentUserInfo(response:) should ask the view controller to display the result")
     }
}

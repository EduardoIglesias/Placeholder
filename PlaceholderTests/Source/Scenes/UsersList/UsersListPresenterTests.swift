//
//  UsersListPresenterTests.swift
//  Placeholder
//
//  Created by Eduardo Iglesias Fern√°ndez on 14/06/2020.
//  Copyright (c) 2020 Rindus. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Placeholder
import XCTest

class UsersListPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: UsersListPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupUsersListPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupUsersListPresenter()
  {
    sut = UsersListPresenter()
  }
  
  // MARK: Test doubles
  
  class UsersListDisplayLogicSpy: UsersListDisplayLogic
  {
    
    var displayNavBarDataCalled = false
    var displayNoDataTextCalled = false
    var displayFetchedUsersCalled = false
    
    func displayNavBarData(_ viewModel: UsersList.UpdateNavBar.ViewModel) {
      displayNavBarDataCalled = true
    }
    func displayNoDataText(_ viewModel: UsersList.SetText.ViewModel) {
      displayNoDataTextCalled = true
    }
    func displayFetchedUsers(_ viewModel: UsersList.FetchUsers.ViewModel) {
      displayFetchedUsersCalled = true
    }
    
  }
  
  // MARK: Tests
  
    func testPresentNavBarData() {
        // Given
        let spy = UsersListDisplayLogicSpy()
        sut.viewController = spy
        let response = UsersList.UpdateNavBar.Response(navData: Seeds.NavBarDatas.navBarDataVoid)
        
        // When
        sut.presentNavBarData(response)
        
        // Then
        XCTAssertTrue(spy.displayNavBarDataCalled, "presentNavBarData(response:) should ask the view controller to display the result")
    }
    
    func testPresentNoDataText() {
        // Given
        let spy = UsersListDisplayLogicSpy()
        sut.viewController = spy
        let response = UsersList.SetText.Response(noDataText: "NodataTextTest")
        
        // When
        sut.presentNoDataText(response)
        
        // Then
        XCTAssertTrue(spy.displayNoDataTextCalled, "presentNavBarData(response:) should ask the view controller to display the result")

    }
    
    func testPresentFetchedUsers() {
         // Given
         let spy = UsersListDisplayLogicSpy()
         sut.viewController = spy
        var userListTest: [User] = []
        userListTest.append(Seeds.Users.userTest)
        
        let response = UsersList.FetchUsers.Response(users: userListTest, error: "errorTest")
         
         // When
         sut.presentFetchedUsers(response)
         
         // Then
         XCTAssertTrue(spy.displayFetchedUsersCalled, "presentUserInfo(response:) should ask the view controller to display the result")
     }
}

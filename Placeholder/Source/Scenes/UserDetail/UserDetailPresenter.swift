//
//  UserDetailPresenter.swift
//  Placeholder
//
//  Created by Eduardo Iglesias Fern√°ndez on 09/06/2020.
//  Copyright (c) 2020 Rindus. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserDetailPresentationLogic {
    func presentNavBarData(_ response: UserDetail.UpdateNavBar.Response)
    func presentViewFields(_ response: UserDetail.SetViewFields.Response)
    func presentUserInfo(_ response: UserDetail.SetUserInfo.Response)
}

class UserDetailPresenter: UserDetailPresentationLogic {
  weak var viewController: UserDetailDisplayLogic?
  
  // MARK: - UsersListPresentationLogic
  
    func presentNavBarData(_ response: UserDetail.UpdateNavBar.Response) {
        let viewModel = UserDetail.UpdateNavBar.ViewModel(
            navData: response.navData)
        viewController?.displayNavBarData(viewModel)
    }
    
    func presentViewFields(_ response: UserDetail.SetViewFields.Response) {
        let viewModel = UserDetail.SetViewFields.ViewModel(
            viewFields: response.viewFields)
        viewController?.displayViewFields(viewModel)
    }
    
    func presentUserInfo(_ response: UserDetail.SetUserInfo.Response) {
        let userFormatted = UserFormatted(
            username: response.userInfo.username,
            email: response.userInfo.email,
            address: "\(response.userInfo.address.street ?? ""), \(response.userInfo.address.suite ?? "") (\(response.userInfo.address.city ?? "")). \(response.userInfo.address.zipcode ?? "")",
            phone: response.userInfo.phone,
            website: response.userInfo.website,
            companyName: response.userInfo.company.name)
        
        let viewModel = UserDetail.SetUserInfo.ViewModel(
            userInfo: userFormatted)
        viewController?.displayUserInfo(viewModel)
    }
}
